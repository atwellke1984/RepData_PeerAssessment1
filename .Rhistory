setwd(~/RepData_PeerAssessment1)
setwd("~/RepData_PeerAssessment1")
getwd
getwd()
zip_file <- "activity.zip"
preprocessed_data <- read.csv(unzip(zip_file, "activity.csv"))
dim(preprocessed_data)
head(preprocessed_data)
tail(preprocessed_data)
head(preprocessed_data, n=30)
str(preprocessed_data)
summary(preprocessed_data)
preprocessed_data <- read.csv(unzip(zip_file, "activity.csv"), na.strings = "NA")
str(preprocessed_data)
preprocessed_data <- read.csv(unzip(zip_file, "activity.csv"), na.strings = "NA", colClasses = c("numeric", "character", "factor"))
str(preprocessed_data)
preprocessed_data$date <- as.Date(preprocessed_data$date, format = %Y/%m/%d)
preprocessed_data$date <- as.Date(preprocessed_data$date, format = "%Y/%m/%d")
str(preprocessed_data)
preprocessed_data <- read.csv(unzip(zip_file, "activity.csv"), na.strings = "NA", colClasses = c("numeric", "character", "factor"))
preprocessed_data$date <- as.Date(preprocessed_data$date, format = "%Y-%m-%d")
str(preprocessed_data)
levels(preprocessed_data$interval)
zip_file <- "activity.zip"
preprocessed_data <- read.csv(unzip(zip_file, "activity.csv"), na.strings = "NA", colClasses = c("numeric", "character", "integer"))
preprocessed_data$date <- as.Date(preprocessed_data$date, format = "%Y-%m-%d")
str(preprocessed_data)
total_steps_per_day <- aggregate(activity_data$steps, date, sum)
total_steps_per_day <- aggregate(preprocessed_data$steps, date, sum)
total_steps_per_day <- aggregate(preprocessed_data$steps, by = date, sum)
total_steps_per_day <- aggregate(preprocessed_data$steps, by = preprocessed_data$date, sum)
total_steps_per_day <- aggregate(steps ~ date, data = preprocessed_data, sum)
head(total_steps_per_day)
hist(total_steps_per_day$steps)
hist(total_steps_per_day$steps,)
hist(total_steps_per_day$steps, main = "Total Number of Steps Taken per Day", xlab = "Number of Steps", col = "Blue")
hist(total_steps_per_day$steps, main = "Total Number of Steps Taken per Day", xlab = "Number of Steps", col = "Blue", breaks = 10)
hist(total_steps_per_day$steps, main = "Total Number of Steps Taken per Day", xlab = "Number of Steps", col = "Blue", breaks = 15)
hist(total_steps_per_day$steps, main = "Total Number of Steps Taken per Day", xlab = "Number of Steps", col = "Blue", breaks = 20)
mean(na.omit(total_steps_per_day))
mean(total_steps_per_day)
mean(na.omit(total_steps_per_day$steps))
mean(total_steps_per_day$steps)
total_steps_per_day <- na.omit(aggregate(steps ~ date, data = preprocessed_data, sum))
hist(total_steps_per_day$steps,
main = "Total Number of Steps Taken per Day",
xlab = "Number of Steps",
col = "Blue",
breaks = 20)
mean(total_steps_per_day$steps)
median(total_steps_per_day$steps)
average_steps_per_interval <- aggregate(steps ~ interval, data = preprocessed_data, mean)
head(average_steps_per_interval)
plot(average_steps_per_interval$interval, average_steps_per_interval$steps, type = "l")
plot(average_steps_per_interval$interval, average_steps_per_interval$steps, type = "l", main = "Average Number of Steps Taken per 5 Minute Interval", xlab = "5 Minute Interval", ylab = "Average Number of Steps Taken")
max(average_steps_per_interval$steps)
?which
which(average_steps_per_interval$steps == max(average_steps_per_interval$steps))
average_steps_per_interval[which(average_steps_per_interval$steps == max(average_steps_per_interval$steps)), ]
interval_with_max_steps <- average_steps_per_interval[which(average_steps_per_interval$steps == max(average_steps_per_interval$steps)), ]
interval_with_max_steps <- interval_with_max_steps$interval
interval_with_max_steps
?nrows
head(activity_data)
head(preprocessed_data)
sum(is.na(preprocessed_data$steps))
sum(is.na(preprocessed_data$date))
sum(is.na(preprocessed_data$interval))
dim(preprocessed_data)
pMiss <- function(x){sum(is.na(x))/length(x)*100}
apply(preprocessed_data,2,pMiss)
apply(preprocessed_data,1,pMiss)
apply(preprocessed_data,2,pMiss)
install.packages("mice")
md.pattern(preprocessed_data)
library(mice)
md.pattern(preprocessed_data)
install.packages("VIM")
library(VIM)
aggr_plot <- aggr(preprocessed_data, col=c('navyblue','red'), numbers=TRUE, sortVars=TRUE, labels=names(preprocessed_data), cex.axis=.7, gap=3, ylab=c("Histogram of missing data","Pattern"))
missing_data <- preprocessed_data[is.na(preprocessed_data$steps), ]
head(missing_data)
dim(missing_data)
hist(missing_data$date)
hist(missing_data$date)
hist(missing_data$date, breaks = 10)
hist(missing_data$interval)
plot(missing_data$date, missing_data$interval)
plot(missing_data$date, missing_data$interval, type = "l")
marginplot(missing_data[c(1,2)])
methods(mice)
class(preprocessed_data)
?functionResult
options(decimal = 2)
mean_number_steps_per_day <- mean(total_steps_per_day$steps)
mean_number_steps_per_day
?mean
?format
mean_number_steps_per_day <- format(mean(total_steps_per_day$steps), digits = 2)
mean_number_steps_per_day
mean_number_steps_per_day <- format(mean(total_steps_per_day$steps), digits = 2, nsmall = 2)
mean_number_steps_per_day
number_of_rows_with_na <- sum(!complete.cases(activity_data))
number_of_rows_with_na <- sum(!complete.cases(preprocessed_data))
number_of_rows_with_na
sapply(preprocessed_data, function(x) sum(is.na(x)))
?table
table(sapply(preprocessed_data, function(x) sum(is.na(x))))
as.table(sapply(preprocessed_data, function(x) sum(is.na(x))))
average_steps_per_interval <- aggregate(steps ~ interval, data = preprocessed_data, mean)
average_steps_per_interval
average_steps_per_interval <- aggregate(steps ~ interval, data = preprocessed_data, mean, na.rm = TRUE)
average_steps_per_interval
?aggregate
aggregate(steps ~ interval, data = preprocessed_data, mean, na.action = na.omit)
average average_steps_per_interval
average_steps_per_interval
?ave
head(preprocessed_data)
preprocessed_data$steps_na_replaced <- ave(preprocessed_data$steps, preprocessed_data$interval, FUN = function(x)unique(x[!is.na(x)]))
warnings(1)
install.packages("zoo")
install.packages("zoo")
install.packages("zoo")
getwd()
missing_na_replaced <- na.aggregate(preprocessed_data$steps, preprocessed_data$interval, FUN = mean)
library("zoo")
missing_na_replaced <- na.aggregate(preprocessed_data$steps, preprocessed_data$interval, FUN = mean)
head(missing_na_replaced)
head(preprocessed_data)
head(average_steps_per_interval)
class(missing_na_replaced)
preprocessed_data$missing_na_replaced <- na.aggregate(preprocessed_data$steps, preprocessed_data$interval, FUN = mean)
head(preprocessed_data)
activity_data_na_replaced <- preprocessed_data[2:3,]
head(activity_data_na_replaced)
activity_data_na_replaced <- preprocessed_data[,2:3]
head(activity_data_na_replaced)
activity_data_na_replaced$steps <- na.aggregate(preprocessed_data$steps, preprocessed_data$interval, FUN = mean)
head(activity_data_na_replaced)
activity_data_na_replaced$day <- weekdays(activity_data_na_replaced$date)
head(activity_data_na_replaced)
clas(activity_data_na_replaced$day)
class(activity_data_na_replaced$day)
activity_data_na_replaced$day[activity_data_na_replaced$day == "Monday" | "Tuesday" | "Wednesday" | "Thursday" | "Friday"] <- "weekday"
weekdays <- c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday")
activity_data_na_replaced$day[activity_data_na_replaced$day == weekdays] <- "weekday"
activity_data_na_replaced$day[activity_data_na_replaced$day == "weekdays"] <- "weekday"
activity_data_na_replaced$day[activity_data_na_replaced$day == "Monday | Tuesday | Wednesday | Thursday | Friday"] <- "weekday"
head(activity_data_na_replaced)
tail(activity_data_na_replaced)
library(plyr)
revalue(activity_data_na_replaced, c("Monday"="weekday", "Tuesday"="weekday", "Wednesday"="weekday", "Thursday"="weekday", "Friday"="weekday"))
revalue(activity_data_na_replaced, c("Monday"="weekday")
)
class(activity_data_na_replaced$day)
as.factor(activity_data_na_replaced$day)
revalue(activity_data_na_replaced, c("Monday"="weekday"))
revalue(activity_data_na_replaced, c("Monday"=="weekday"))
revalue(activity_data_na_replaced$day, c("Monday"="weekday"))
activity_data_na_replaced$day <- revalue(activity_data_na_replaced$day, c("Monday"="weekday", "Tuesday"="weekday", "Wednesday"="weekday", "Thursday"="weekday", "Friday"="weekday"))
head(activity_data_na_replaced)
tail(activity_data_na_replaced)
str(activity_data_na_replaced)
summary(activity_data_na_replaced)
activity_data_na_replaced$day <- as.factor(revalue(activity_data_na_replaced$day, c("Monday"="weekday", "Tuesday"="weekday", "Wednesday"="weekday", "Thursday"="weekday", "Friday"="weekday")))
summary(activity_data_na_replaced)
activity_data_na_replaced$day <- weekdays(activity_data_na_replaced$date)
head(activity_data_na_replaced)
str(activity_data_na_replaced)
as.factor(activity_data_na_replaced$day)
str(activity_data_na_replaced)
class(activity_data_na_replaced$day)
activity_data_na_replaced$day <- as.factor(activity_data_na_replaced$day)
class(activity_data_na_replaced$day)
levels(activity_data_na_replaced$day)
activity_data_na_replaced$day <- revalue(activity_data_na_replaced$day,
c("Monday"="weekday",
"Tuesday"="weekday",
"Wednesday"="weekday",
"Thursday"="weekday",
"Friday"="weekday",
"Saturday"="weekend",
"Sunday"="weekend"))
levels(activity_data_na_replaced$day)
class(activity_data_na_replaced$day)
head(activity_data_na_replaced)
average_steps_per_day_type <- aggregate(steps ~ day, data = activity_data_na_replaced, mean)
head(average_steps_per_day_type)
average_steps_per_day_type <- aggregate(steps ~ day + interval, data = activity_data_na_replaced, mean)
head(average_steps_per_day_type)
library(lattice)
xyplot(interval ~ steps, data = average_steps_per_day_type)
xyplot(steps ~ interval, data = average_steps_per_day_type)
xyplot(steps ~ interval, data = average_steps_per_day_type, type = "l")
xyplot(steps ~ interval | day, data = average_steps_per_day_type, type = "l", layout = c(1,2))
xyplot(steps ~ interval | day, data = average_steps_per_day_type, type = "l", layout = c(1,2), main = "The Average Number of Steps Taken over each 5-min Interval during Weekdays and the Weekend")
xyplot(steps ~ interval | day, data = average_steps_per_day_type, type = "l", layout = c(1,2), main = "Average Number of Steps Taken over each 5-min Interval during Weekdays and the Weekend")
